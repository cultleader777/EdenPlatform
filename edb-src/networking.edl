
TABLE tld {
  domain TEXT PRIMARY KEY,
  expose_admin BOOL DEFAULT true, // TODO: prove there's only one admin panel
  automatic_certificates BOOL DEFAULT true,
  CHECK { isValidTld(domain) },
}

TABLE region {
  region_name TEXT PRIMARY KEY,
  availability_mode TEXT DEFAULT single_dc,
  tld REF tld DETACHED DEFAULT,
  // for quorums
  is_dns_master BOOL DEFAULT false,
  is_dns_slave BOOL DEFAULT false,
  has_coprocessor_dc BOOL DEFAULT false,
  docker_image_external_lb REF docker_image_pin DETACHED DEFAULT,
  // if log collection is enabled that's more memory used and we have loki for logs
  nomad_disable_log_collection BOOL DEFAULT true,
  CHECK { isKebabCase(region_name) },
  CHECK { #region_name >= 1 and #region_name <= 14 },
  CHECK { isInSet(VALID_REGION_AVAILABILITY_MODES, availability_mode) },
}

TABLE datacenter {
  dc_name TEXT PRIMARY KEY,
  region REF region DETACHED DEFAULT,
  network_cidr TEXT,
  allow_small_subnets BOOL DEFAULT false,
  implementation TEXT DETACHED DEFAULT,
  // specific for each implementation
  // say, aws availability zone is specified here
  implementation_settings TEXT DEFAULT '',
  default_server_kind REF server_kind DETACHED DEFAULT,
  disk_ids_policy TEXT DEFAULT 'auto',
  router_subnet_vlan_id INT DEFAULT -1,

  // 14 figure is longest aws region ap-southeast-1
  CHECK { #dc_name >= 1 and #dc_name <= 14 },
  // dc name is used inside dns
  CHECK { isKebabCase(dc_name) },
  CHECK { server_dns_check(is_dns_master, is_dns_slave) },
  // these are reserved for authoritative
  // dns records ns1 ns2 etc.
  CHECK { not stringStarts(dc_name, 'ns') },
  CHECK { isInSet(VALID_DC_IMPLEMENTATIONS, implementation) },
  CHECK { isValidDiskIdPolicy(disk_ids_policy) },
}

TABLE network {
    network_name TEXT PRIMARY KEY,
    cidr TEXT, // TODO: check validity of cidr block

    // only these networks supported now
    CHECK { isInSet(ALLOWED_SUBNET_NAMES, network_name) }
}

TABLE network_interface {
    if_name TEXT PRIMARY KEY CHILD OF server,
    if_network REF network,
    if_ip TEXT,
    // default for LAN and VPN bonds
    if_prefix INT DEFAULT 24,
    // optional for networking model
    if_vlan INT DEFAULT -1,
    CHECK { if_prefix >= 0 and if_prefix <= 32 },
}

TABLE subnet_router_floating_ip {
    ip_address TEXT PRIMARY KEY,
}
