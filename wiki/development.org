* Development

** Testing

There are these ways to test code when working with Eden platform

*** Source compilation error tests

In src/tests/ directory where most tests use function `assert_platform_validation_error`.

There is common data added not to bootstrap datacenters, can be removed with

```
        common::assert_platform_validation_error_wcustom_data_wargs(
            common::TestArgs {
                add_default_global_flags: false,
                add_default_data: false,
            },
```

Sources are parsed and all eden platform checks are run up until first returned error.

This is preferred way to test because it runs the fastest

*** Integration tests with simulated/real test environments

Under `test-envs/` directory exists test environments. This is useful to find out if codegen actually works and infrastructure builds.

Integration tests for every project are automatically generated from codegen, but custom ones can be added in environments `integration-tests/src/manual.rs` file.

Usually for testing features `single-dc` environment is enough which runs libvirt virtual machines for testing.

To run this environment:
```
cd test-envs/envs/single-dc
sudo -E make full-provision-with-tests
```

Teardown after finish:
```
sudo -E make teardown
```

These are useful when testing cloud specific datacenter implementations.

*** Configuration simulation tests

This is used after first testing the environment with integration tests and freezing the configuration.

These kind of tests run all checks, expect they pass and generate configuration files for all the environments which then can be frozen to know for a fact nothing broke and not to run expensive integration tests.

Examples of such tests can be found in `src/tests/networking/simulation/tests.rs`

** Adding cloud checklist

- support all machine types in server_kinds table
- support all disk kinds in disk_kinds table
- static analysis about things that can go wrong configuring the cloud
- terraform configuration generation
- test with integration tests
